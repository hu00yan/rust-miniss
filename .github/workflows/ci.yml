name: CI - Build Matrix Validation

on:
  push:
    branches:
      - main
      - feat/**
      - develop
      - refactor-io-subsystem
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Quick checks first - fail fast
  quick-checks:
    name: Quick Checks (Format & Clippy)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings

  # Main test suite
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: quick-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y liburing-dev build-essential

    - name: Build (debug)
      run: cargo build --all-targets

    - name: Build (release)
      run: cargo build --release

    - name: Install nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest

    - name: Run tests
      run: cargo nextest run --all-targets

    - name: Check documentation
      run: cargo doc --all-features --no-deps

    - name: Build benchmarks
      run: cargo bench --all-targets --no-run

    - name: Build examples
      run: |
        for example in examples/*.rs; do
          if [[ -f "$example" ]]; then
            example_name=$(basename "$example" .rs)
            echo "Building example: $example_name"
            cargo build --example "$example_name"
          fi
        done

  # Cross compilation check
  cross-compile:
    name: Cross-compilation Check
    runs-on: ubuntu-latest
    needs: quick-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        target: aarch64-unknown-linux-gnu

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cross-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Setup cross-compilation
      run: |
        mkdir -p .cargo
        echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
        echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

    - name: Cross-compile check for ARM64
      run: cargo check --target aarch64-unknown-linux-gnu
